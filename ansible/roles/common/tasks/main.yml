#SPDX-License-Identifier: MIT-0
---
# tasks file for roles/common
# Include vars and define needeed
- name: Include appropriate vars for OS family
  ansible.builtin.include_vars: "{{ os_specific_vars }}"
  with_first_found:
    - "./vars/{{ ansible_distribution | lower | replace(' ', '_') }}-{{ ansible_distribution_version }}.yml"
    - "./vars/{{ ansible_distribution | lower | replace(' ', '_') }}.yml"
    - "./vars/{{ ansible_os_family | lower }}-{{ ansible_distribution_version }}.yml"
    - "./vars/{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version }}.yml"
    - "./vars/{{ ansible_os_family | lower }}.yml"
    - "./defaults/main.yml"
  loop_control:
    loop_var: os_specific_vars

- name: Ensure dependencies are installed
  become: true
  ansible.builtin.apt:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
  loop: "{{ common_apt }}"

- name: Download Kubernetes GPG key
  become: true
  ansible.builtin.get_url:
    url: "{{ common_kubic_apt_gpg_key }}"
    dest: "{{ common_kubic_tmp_local_path }}"
    owner: root
    group: root
    mode: "0644"

- name: Convert Kubernetes GPG key to binary format
  ansible.builtin.shell: "gpg --dearmor -o {{ common_kubic_apt_gpg_key_local_path }} {{ common_kubic_tmp_local_path }}"
  args:
    creates: "{{ common_kubic_apt_gpg_key_local_path }}"

- name: Remove temporary Kubernetes GPG key
  become: true
  ansible.builtin.file:
    path: "{{ common_kubic_tmp_local_path }}"
    state: absent

- name: Add Kubernetes repository
  become: true
  ansible.builtin.copy:
    dest: "{{ common_kubernetes_rep_sources }}"
    content: "{{ common_kubic_apt_repository }}"
    owner: root
    group: root
    mode: "0644"
